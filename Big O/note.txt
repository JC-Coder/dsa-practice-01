Time Complexity : 
analyzing the runtime of an algorithm as the size of the inputs increases.

Space Complexity :
how much additional memory is allocated when the code runs.

Auxiliary space complexity:
this refer to the space required by the algorithm, not including the space taken up by the inputs.

Logarithm:
The logarithm of a number roughly measures the number of times you can divide that number by 2 before you get a value that's less than or equal to one.

Most common use cases of the logarithm
1. Certain searching algorithms have logarithmic time complexity.
2. Efficient sorting algorithms involve logarithms
3. Recursion sometimes involves logarithmic space complexity

Big 0 Shorthands

1. arithmetic operations are constant 
2. variable assignment is constant 
3. accessing elements in an array (by index) or object (by key) is constant 
4. in a loop, the complexity is the length of the loop times the complexity of whatever happens inside of the loop


Space Complexity rule of thumb (js)

1. Most primitives (booleans, numbers, undefined , null) are constant space 
2. String requires O(n) space (where n is the string length)
3. Reference types are generally O(n), where n is the length (for arrays) or the number of keys (for objects )